/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

#define DEF 0
#define LWR 1
#define RSE 2
#define ADJ 3

&lt { quick_tap_ms = <220>; };

&mt { quick_tap_ms = <220>; };

/ {
    macros {
        accent: accent {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            label = "ACCENT";
            tap-ms = <0>;
            wait-ms = <0>;
            bindings =
                <&macro_press>,
                <&kp LCTRL &kp LSHFT>,
                <&macro_tap>,
                <&kp U>,
                <&macro_release>,
                <&kp LCTRL &kp LSHFT>,
                <&macro_tap>,
                <&kp N0 &kp N3 &kp N0 &kp N1 &kp SPC>;
        };

        shiftalt: shiftalt {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            label = "SHIFTALT";
            tap-ms = <0>;
            wait-ms = <0>;
            bindings =
                <&macro_press>,
                <&kp LSHFT>,
                <&macro_tap>,
                <&kp LALT>,
                <&macro_release>,
                <&kp LSHFT>;
        };
    };
};

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&mt LWIN RBKT    &kp Q       &kp W       &kp E        &kp R            &kp T        &kp Y      &kp U           &kp I        &kp O       &kp P          &mt RWIN LBKT
&mt LCTRL GRAVE  &mt LWIN A  &mt LALT S  &mt LCTRL D  &mt LSHFT F      &kp G        &kp H      &mt RSHFT J     &mt RCTRL K  &mt RALT L  &mt RGUI SEMI  &mt RCTRL SQT
&mt LALT BSLH    &kp Z       &kp X       &kp C        &kp V            &kp B        &kp N      &kp M           &kp COMMA    &kp DOT     &kp FSLH       &mt RALT MINUS
                                         &lt 2 TAB    &mt LSHFT SPACE  &lt 1 RET    &lt 1 ESC  &mt RSHFT BSPC  &lt 2 DEL
            >;
        };

        lower_layer {
            bindings = <
&none           &kp F1       &kp F2       &kp F3        &kp F4        &accent      &kp EXCLAMATION  &kp AT          &kp HASH        &kp DOLLAR     &kp PERCENT    &none
&mt LCTRL PLUS  &mt LWIN F5  &mt LALT F6  &mt LCTRL F7  &mt LSHFT F8  &shiftalt    &kp CARET        &mt RSHFT AMPS  &mt RCTRL STAR  &mt RALT LPAR  &mt RGUI RPAR  &mt RCTRL UNDER
&mt LALT EQUAL  &kp F9       &kp F10      &kp F11       &kp F12       &none        &none            &none           &none           &none          &none          &mt RALT MINUS
                                          &lt 3 TAB     &trans        &trans       &trans           &trans          &lt 3 DEL
            >;
        };

        raise_layer {
            bindings = <
&kp LGUI               &kp KP_MULTIPLY     &kp N7             &kp N8        &kp N9              &kp KP_PLUS     &kp INSERT  &kp HOME        &kp C_PP      &kp PG_UP       &kp C_VOL_UP       &kp RGUI
&mt LCTRL KP_PLUS      &mt LWIN KP_DIVIDE  &mt LALT NUMBER_4  &mt LCTRL N5  &mt LSHFT NUMBER_6  &kp KP_MINUS    &kp LEFT    &mt RSHFT DOWN  &mt RCTRL UP  &mt RALT RIGHT  &mt RGUI C_VOL_DN  &mt RCTRL K_MENU
&mt LEFT_ALT KP_EQUAL  &kp KP_NUMBER_0     &kp N1             &kp N2        &kp N3              &kp KP_DOT      &none       &kp END         &kp PSCRN     &kp PG_DN       &kp C_MUTE         &kp RALT
                                                              &trans        &trans              &lt 3 RET       &lt 3 ESC   &trans          &trans
            >;
        };

        adjust_layer {
            bindings = <
&mt LWIN KP_NUMLOCK  &out OUT_USB      &out OUT_BLE       &none         &none         &none           &none  &none  &none  &none  &none  &mt RWIN CAPS
&bt BT_CLR           &bt BT_SEL 0      &bt BT_SEL 1       &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &none  &none  &none  &none  &none  &none
&ext_power EP_OFF    &ext_power EP_ON  &ext_power EP_TOG  &none         &none         &none           &none  &to 4  &none  &none  &none  &none
                                                          &none         &none         &none           &none  &none  &none
            >;
        };

        worms1_layer {
            bindings = <
&trans  &trans  &trans          &kp UP_ARROW    &trans           &kp TAB      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &trans       &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans          &trans          &trans           &trans       &trans  &trans  &trans  &trans  &trans  &trans
                                &kp BACKSPACE   &kp SPACE        &kp ENTER    &to 0   &trans  &trans
            >;
        };
    };
};
